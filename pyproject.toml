[project]
name = "calibration-service"
version = "0.1.0"
description = "This backend service is designed to manage calibrations of a hardware device."
authors = [
    { name = "Angelo Cisneros", email = "el-besto@users.noreply.github.com" }
]
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    "fastapi[standard]>=0.115.12",
]

[dependency-groups]
dev = [
    "pre-commit>=4.2.0",
    "pyright>=1.1.398",
    "ruff>=0.11.2",
]

[tool.pyright]
include = ["app"]
exclude = [
    "**/__pycache__"
]
ignore = []
pythonVersion = "3.12"
typeCheckingMode = "strict"
venvPath = "./"
venv = ".venv"
defineConstant = { DEBUG = true }
reportMissingImports = "error"
reportMissingTypeStubs = "error"

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".eggs",
    ".git",
    ".git-rewrite",
    ".github",
    ".idea",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".run",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]
# Same as Black.
line-length = 88
indent-width = 4
target-version = "py312"

[tool.ruff.lint]
select = [
    # pycodestyle
    "E",
    # Pyflakes
    "F",
    # pyupgrade
    "UP",
    # flake8-bugbear
    "B",
    # flake8-simplify
    "SIM",
    # isort
    "I",
]
ignore = ["F401", "W191", "E111", "E114", "E117", "D206", "D300", "Q000", "Q001", "Q002", "Q003", "COM812", "COM819"]
# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []
# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"
# Like Black, indent with spaces, rather than tabs.
indent-style = "space"
# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false
# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"
# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
docstring-code-format = true
docstring-code-line-length = "dynamic"
